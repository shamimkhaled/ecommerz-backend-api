"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
# from django.core.exceptions import ImproperlyConfigured
# from social_auth.models import SocialAuth

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-09wwsxv2ge@een!jibwknjjesb2-g0b4(oahbk(=u=vsvq81*)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['192.168.0.237', 'localhost', '127.0.0.1']
ALLOWED_HOSTS = ['.vercel.app', 'localhost', '127.0.0.1']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'accounts',
    'store',
    'cart',
    'order',
    'couponcode',
    'payment',
    'product_utils',
    'refund',
    'dashboard',

    'rest_framework',

    'django_filters',
    'drf_yasg',
    'drf_spectacular',
 


]

# SITE_ID = 1


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",

]

# CORS_ALLOWED_ORIGINS = []

ROOT_URLCONF = 'backend.urls'
# ROOT_URLCONF = 'django_rest_swagger.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'
# WSGI_APPLICATION = 'django_rest_swagger.wsgi.application'



REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 2, # Adjust the page size as needed
    
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework.authentication.TokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),

    # 'EXCEPTION_HANDLER': 'accounts.token_expired_exception_handler.custom_exception_handler',
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'your_app_name.authentication.CustomTokenAuthentication',
    # ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",



   
}

SPECTACULAR_SETTINGS = {
    "Title": "Ecommerz API Docs"
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',

        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'verceldb',
        'USER': 'default',
        'PASSWORD': 'yrpSaBoY4L7n',
        'HOST': 'ep-lively-lab-a4fkead9-pooler.us-east-1.aws.neon.tech',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]

# Additional locations of static files
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Directory where static files will be collected
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_RUL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# settings.py

# URL to use when referring to media files
# MEDIA_URL = '/media/'

# # Directory where media files will be stored
# MEDIA_ROOT = BASE_DIR / "media"


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



AUTH_USER_MODEL = 'accounts.UserAccount'

STRIPE_SECRET_KEY = 'sk_test_51PKZydBuT9lXsa9qOFbUtYSXUcXl0Gvv5eM6VlOlsQqbzPJfye6OKgBRsS9MKTZPv8h95bt0v8iWsJWgYUC7JZWh007dh4SWfy'
STRIPE_PUBLISHABLE_KEY = 'pk_test_51PKZydBuT9lXsa9qV3RsWEf78MH9nSOeiHLWWwfFSMkEntQpb2dKMKXVku5o59PJn0RDXbQA634YQz9Z9CtKGALm004EOzEcsy'


# SSLCommerz configuration
SSL_COMMERZ_STORE_ID = 'enexu6654aa47bbcb8'
SSL_COMMERZ_STORE_PASSWORD = 'enexu6654aa47bbcb8@ssl'
SSL_COMMERZ_SANDBOX = True  # Set to False in production
issandbox = True


# settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'i.amkhaled89@gmail.com'
EMAIL_HOST_PASSWORD = 'zpobwqphhermnfks'
# DEFAULT_FROM_EMAIL = 'your-email@example.com'






# def get_social_providers():
#     social_providers = {}

#     try:
#         social_apps = SocialAuth.objects.all()

#         for app in social_apps:
#             if app.provider not in social_providers:
#                 social_providers[app.provider] = {
#                     'APP': {
#                         'client_id': app.client_id,
#                         'secret': app.secret,
#                         # 'key': ''
#                     }
#                 }
#     except Exception as e:
#         raise ImproperlyConfigured(f"Error loading social providers: {str(e)}")

#     return social_providers

# try:
#     SOCIALACCOUNT_PROVIDERS = get_social_providers()
# except ImproperlyConfigured:
#     SOCIALACCOUNT_PROVIDERS = {}
